import java.io.*;
import java.text.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.*;

class MONTHI{
    public String ma, ten, hinhthuc;

    public MONTHI(String ma, String ten, String hinhthuc) {
        this.ma = ma;
        this.ten = ten;
        this.hinhthuc = hinhthuc;
    }
    
}
class CATHI{
    public String ma, phong, time;
    public LocalDate localDate;
    public CATHI(int i, String date, String time, String phong){
        this.ma = "C" + String.format("%03d", i);
        this.phong = phong;
        this.time = time;
        this.localDate = LocalDate.parse(date, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
    }
}
class LICHTHI{
    public LocalDate localDate;
    public String maCT, maMon, maNhom, time, ID, tenMon;
    public int soSV;

    public LICHTHI(String maCT, String maMon, String maNhom, int soSV){
        this.maCT = maCT;
        this.maMon = maMon;
        this.maNhom = maNhom;
        this.soSV = soSV;
    }

    public void setLocalDate(LocalDate date) {
        this.localDate = date;
    }

    public void setTime(String time) {
        this.time = time;
    }

    public void setTenMon(String tenMon){
        this.tenMon = tenMon;
    }

    public void setID(String ID) {
        this.ID = ID;
    }
    
    public int getyear(){
        return localDate.getYear();
    }
    public int getmonth(){
        return localDate.getMonthValue();
    }
    public int getdays(){
        return localDate.getDayOfMonth();
    }
    public int getgio(){
        return Integer.parseInt(time.substring(0,2));
    }
    public int getphut(){
        return Integer.parseInt(time.substring(3));
    }
    
    @Override
    public String toString(){
        return String.format("%02d/%02d/%d", localDate.getDayOfMonth(),localDate.getMonthValue(), localDate.getYear()) + " " + time + " " + ID + " " + tenMon + " " + maNhom + " " + soSV;
    }
}
public class Test1 {

    public static void main(String[] args) throws Exception{
        Scanner sc = new Scanner(new File("MONTHI.in"));
        Scanner sc1 = new Scanner(new File("CATHI.in"));
        Scanner sc2 = new Scanner(new File("LICHTHI.in"));
        ArrayList<MONTHI> a = new ArrayList<>();
        ArrayList<CATHI> b = new ArrayList<>();
        ArrayList<LICHTHI> c = new ArrayList<>();
        int n = Integer.parseInt(sc.nextLine());
        while(n-- > 0)
            a.add(new MONTHI(sc.nextLine(), sc.nextLine(), sc.nextLine()));

        n = sc1.nextInt();
        for(int i = 1; i <= n; i++)
            b.add(new CATHI(i, sc1.next(), sc1.next(), sc1.next()));

        n = sc2.nextInt();
        while(n-- > 0)
            c.add(new LICHTHI(sc2.next(), sc2.next(), sc2.next(), sc2.nextInt()));
        for(MONTHI x : a)
            for(LICHTHI y : c)
                if(x.ma.equals(y.maMon))
                    y.setTenMon(x.ten);
        for(CATHI x : b)
            for(LICHTHI y : c)
                if(x.ma.equals(y.maCT)){
                    y.setLocalDate(x.localDate);
                    y.setID(x.phong);
                    y.setTime(x.time);
                }
        Collections.sort(c, Comparator.comparingInt(LICHTHI::getyear).thenComparing(LICHTHI::getmonth).thenComparing(LICHTHI::getdays).thenComparing(LICHTHI::getgio).thenComparing(LICHTHI::getphut));
        for(LICHTHI x : c)
                System.out.println(x);
    }
}
